conda create --name python_ecommerce_venv


conda activate python_ecommerce_venv


python manage.py collectstatic
è il comando che uso per muovere gli static fies


se ho
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static_cdn")

e faccio in

STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static_cdn", "static_root")

ottengo che 
python manage.py collectstatic
copia gli statics in 
132 static files copied to 'C:\Users\Tommaso\Django rest framework\Udemy Django\static_cdn\static_root'.
compone l cartelle una dentro l'altra come dettato dalle virgole

questo da l'idea del media root



-------


due view possono puntare allo steso template

class ProductListView(ListView):
    queryset = Product.objects.all()
    template_name = "products/list.html"


def product_list_view(request):
    queryset = Product.objects.all()
    context = {
        'qs': queryset
    }
    return render(request, "products/list.html", context)


    ---

    insomma queste sono equivalenti, fbv vs cbv

    class ProductListView(ListView):
    queryset = Product.objects.all()
    template_name = "products/list.html"

    # def get_context_data(self, *args, **kwargs):
    #     context = super(ProductListView, self).get_context_data(*args, **kwargs)
    #     print(context)
    #     return context



def product_list_view(request):
    queryset = Product.objects.all()
    context = {
        'object_list': queryset
    }
    return render(request, "products/list.html", context)


python manage.py shell


    path('products/<str:slug>', ProductDetailSlugView.as_view()),


at4enzione activate
Product.objects.get
vs
Product.object.get


------------

I Signal sa mi servono per fare in modo che quando cambio gli oggetti contenuti nel carrello dal django-admin di quel Model carrello e il prezzo viene adeguato di conseguenza


i segnali vengono mandati quando succedono cose particolari al modello. eg salvataggio


-------------------


così funziona
<a class="nav-link" href="{% url 'logout' %}">Logout</a>

così no, anche se il tag è registrato
<a class="nav-link" href="{% 'logout_url' %}">Logout</a>



---------------------

se c'è corrispondenza di template e variabile e view, ma la variabile non è mostrata nel template,
probabilmente è un problema di indentazione logica


-
-----------------


blocco a 9.41 di associate addresses to orderr


----------------


source venv/bin/activate


venv_r_path=$(find */bin/ -name "activate")
venv_r_path=$(find */bin/ -name "activate")


ho gestito il fatto che hanno rimosso la funzione is_ajax da request in questo modo:

https://stackoverflow.com/questions/70419441/attributeerror-wsgirequest-object-has-no-attribute-is-ajax


le ajax request sono per fare le cose in modod asicrono e in python le views devo intercettare il fatto che sono asincrone e non sincrone

 if request.is_ajax(): # asinchronous javascript and xml
        print("Ajax request")
        # se la richiesta è ajax, devo ritornare dati usando il formato ajax -> jsonresponse
        # quindi lo aggiungo usando jsonresoonse
        dict_for_jsonresponse = {
            "added": added,
            "removed": not added, # sto aggiungendo l'opposto,
            "cartItemCount": cart_obj.products.count()  # camelcase perche diventa la key di un json
        }
        
        json_response = JsonResponse(dict_for_jsonresponse)

        return json_response  # ok

    return redirect("cart:home")


jquery confirm per sistmare e gestireg li errore

la 113
sono arrivato al 7.23 del 


https://github.com/codingforentrepreneurs/eCommerce
https://github.com/codingforentrepreneurs/eCommerce/tree/master/src



115

voglio lanciare questo
python manage.py collectstatic

ogni volta che aggiungo un file quindi
static_my_proj/js/ecommerce.js
e lo linko qui
templates/base/js.html

129 static files copied to '/home/tommaso/tommaso01/coding_projects/static_cdn/static_root'.


e ricorrda che ho definito

STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static_cdn", "static_root")

